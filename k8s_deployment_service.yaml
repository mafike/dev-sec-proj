apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
        vault.hashicorp.com/agent-init-first: "true"
        traffic.sidecar.istio.io/excludeInboundPorts: "8200"
        traffic.sidecar.istio.io/excludeOutboundIPRanges: "10.108.127.59/32"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/tls-skip-verify: "true"
        vault.hashicorp.com/role: "devsecops-role"
        vault.hashicorp.com/agent-inject-secret-db-credentials: "database/creds/devsecops-role"
        vault.hashicorp.com/agent-inject-template-db-credentials: |
          {{- with secret "database/creds/devsecops-role" -}}
          export DB_USERNAME={{ .Data.username }}
          export DB_PASSWORD={{ .Data.password }}
          {{- end }}
  labels:
    app: devsecops
  name: devsecops
spec:
  replicas: 2
  selector:
    matchLabels:
      app: devsecops
  strategy: {}
  template:
    metadata:
      labels:
        app: devsecops
    spec:
      serviceAccountName: issuer
      initContainers:
      - name: db-check
        image: busybox:1.34
        command:
        - sh
        - -c
        - |
          until nc -zv mysql-service 3306; do
            echo "Waiting for database to be ready...";
            sleep 2;
          done;
      containers:
      - image: replace
        name: devsecops-container
        command: ["/bin/sh", "-c"]
        args:
          - . /vault/secrets/db-credentials && java -jar /home/k8s-pipeline/app.jar
        securityContext:
          runAsNonRoot: true
          runAsUser: 100
          readOnlyRootFilesystem: true
        resources:
         requests:
          memory: "256Mi"
          cpu: "200m"
         limits:
          memory: "512Mi"
          cpu: "500m"  
        volumeMounts:
        - mountPath: /tmp
          name: vol
      volumes:
      - name: vol
        emptyDir: {}  
      affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: type
                    operator: In
                    values:
                    - "spot"
                  - key: lifecycle
                    operator: In
                    values:
                    - "spot"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: devsecops
  name: devsecops-svc
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: devsecops
  type: LoadBalancer